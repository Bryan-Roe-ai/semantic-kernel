# pytest.ini - Comprehensive pytest configuration for Semantic Kernel Python

[tool:pytest]
# Test discovery
testpaths = tests
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Output and reporting
addopts = 
    -ra
    -q
    --strict-markers
    --strict-config
    --tb=short
    --showlocals
    --durations=10
    --durations-min=1.0
    --verbose

# Markers for test categorization
markers =
    unit: Unit tests that don't require external dependencies
    integration: Integration tests that may require external services
    slow: Tests that take a long time to run
    azure: Tests that require Azure services
    openai: Tests that require OpenAI API access
    ollama: Tests that require Ollama service
    onnx: Tests that require ONNX runtime
    experimental: Tests for experimental features
    performance: Performance and benchmark tests
    memory: Memory-intensive tests
    network: Tests that require network access
    gpu: Tests that require GPU
    docker: Tests that require Docker
    mcp: Tests for Model Context Protocol
    agents: Tests for agent functionality
    connectors: Tests for AI connectors
    plugins: Tests for plugin functionality
    samples: Sample and documentation tests

# Test execution
minversion = 6.0
asyncio_mode = auto
asyncio_default_fixture_loop_scope = function
timeout = 300
timeout_method = thread

# Filtering and warnings
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore:.*FunctionChoiceBehavior.*:DeprecationWarning
    ignore:.*unclosed.*:ResourceWarning
    ignore:There is no current event loop:DeprecationWarning
    ignore:.*pkg_resources.*:DeprecationWarning
    error::UserWarning
    error::RuntimeWarning

# Logging
log_cli = false
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

log_file = tests.log
log_file_level = DEBUG
log_file_format = %(asctime)s [%(levelname)8s] %(filename)s:%(lineno)d %(funcName)s(): %(message)s
log_file_date_format = %Y-%m-%d %H:%M:%S

# Coverage configuration (when using --cov)
# This integrates with pytest-cov plugin
