// Copyright (c) Microsoft. All rights reserved.

using System.Collections.Generic;
using System.IO;
using System.Text.Json;
using Microsoft.ML.Tokenizers;
using Microsoft.SemanticKernel.Text;
using Xunit;
using static Microsoft.SemanticKernel.Text.TextChunker;

namespace SemanticKernel.UnitTests.Text;

public sealed class TextChunkerInternationalTests
{
    public sealed class StatefulTokenCounter
    {
        private readonly Dictionary<string, int> _callStats = [];
        private readonly Tokenizer _tokenizer = TiktokenTokenizer.CreateForModel("gpt-4");

        public int Count(string input)
        {
            this.CallCount++;
            this._callStats[input] = this._callStats.TryGetValue(input, out int value) ? value + 1 : 1;
            return this._tokenizer.CountTokens(input);
        }

        public int CallCount { get; private set; } = 0;
    }

    private static TokenCounter StatelessTokenCounter => (string input) =>
    {
        var tokenizer = TiktokenTokenizer.CreateForModel("gpt-4");
        return tokenizer.CountTokens(input);
    };

    [Fact]
    public void TokenCounterCountStateful()
    {
        var counter = new StatefulTokenCounter();
        var lines = TextChunker.SplitPlainTextLines("This is a test", 40, counter.Count);
    }

    [Fact]
    public void TokenCounterCountStateless()
    {
        var counter = new StatefulTokenCounter();
        var lines = TextChunker.SplitPlainTextLines("This is a test", 40, StatelessTokenCounter);
    }

    [Fact]
    public void CanSplitParagraphsWithIdeographicPunctuationAndGptTokenCounter()
    {
        var counter = new StatefulTokenCounter();
        const string Input = "???????????????????";
        var expected = new[]
        {
            "?????????????",
            "??????"
        };

        var result = TextChunker.SplitPlainTextLines(Input, 16, counter.Count);

        Assert.Equal(expected, result);
    }

    /**
     * The following stories were generated with GPT-4 with the prompt
     * "Generate a short story about a mouse that goes on an adventure to a big city."
     */
    [Theory]
    [InlineData("English", "The little mouse lived in a peaceful small village. He always saw the same scenery and interacted with the same friends. One day, he decided to venture to the big city. Carrying a small backpack, he boarded the train.\n\nThe city was a world full of wonders for the little mouse. Tall buildings, bright neon signs, and the hustle and bustle of people. His eyes sparkled as he wandered around. However, he needed some time to get used to this big world.\n\nOne day, the mouse met a big rat in the park. The big rat said to him, “Did you come from a small village? The city can be tough at times, but there are new friends and exciting adventures waiting for you.”\n\nThe mouse nodded with a smile. He decided to find new friends in the city and expand his little world. ")]
    [InlineData("Japanese", "??????????????????????????????????????????????????????????????????????????????????????" +
            "?????????????????????????????????????????????????????????????????????????????????????" +
            "??????????????????????????????????????????????????????????????????????????????????????" +
            "??????????????????????????????????????????????????")]
    [InlineData("Korean", "?? ???? ?? ?? ??? ? ??? ??? ???? ??????. ?? ?? ??? ?? ??? ????.\n\n??? ??? ???? ???????. ?? ??, " +
            "?? ?? ??, ???? ??. ?? ?? ???? ??? ???????. ??? ?? ? ? ??? ?? ? ????? ????.\n\n?? ?, ?? ???? ? ?? ??" +
            "???. ? ?? ??? ?????. \"?? ???? ? ??? ??? ??? ????, ??? ??? ?? ??? ???? ??.\"\n\n?? ??? ?????. ?? ????" +
            "??? ??? ??? ?? ??? ???? ??????.")]
    [InlineData("Arabic", "??? ????? ???? ?? ???? ?????. ??? ??? ??? ??????? ??????? ?? ??? ???????? ??????. ?? ??? ?? ??????? ??? ????? ?? ????? ????? ??? ??????? ???????. ??? ????? ????? ???? ??????.\n\n???? ??????? ????? ????????? ??????? ?????. ??????? ???????? ???????? ?????? ???????? ????? ?????. ??? ????? ????? ???????. ??? ???? ??? ???? ?? ????? ??? ??? ?????? ?????? ??????.\n\n?? ??? ?? ??????? ????? ????? ???? ???? ?? ???????. ??? ?? ????? ??????: \"???? ?? ???? ?????? ??????? ?? ???? ???? ?? ??? ???????? ??? ???? ?????? ??? ???????? ????? ?? ???????.")]
    [InlineData("Chinese", "?????????????????????????,?????????????,?????????????????????,??????\n\n????????????????????????????????????????????????????,????????????????\n\n???,??????????????????????:“???????????????????,????????????????”\n\n????????????????????????,??????????")]
    public void VerifyShortStoryInLanguage(string language, string story)
    {
        var counter = new StatefulTokenCounter();
        var actualResult = TextChunker.SplitPlainTextLines(story, 20, counter.Count);

        Assert.True(counter.CallCount > 0);
        Assert.True(counter.CallCount < story.Length / 2);

        foreach (var line in actualResult)
        {
            Assert.True(counter.Count(line) <= 20);
        }

        var expectedResult = GetLanguageExpectedResult(language);

        Assert.Equal(expectedResult, actualResult);
    }

    #region private

    private static List<string> GetLanguageExpectedResult(string language)
    {
        var fileName = $"TextChunkerInternationalTests.VerifyShortStoryInLanguage_language={language}.txt";
        var filePath = Path.Combine(Directory.GetCurrentDirectory(), "Text", fileName);

        var fileContent = File.ReadAllText(filePath);

        return JsonSerializer.Deserialize<List<string>>(fileContent)!;
    }

    #endregion
}
