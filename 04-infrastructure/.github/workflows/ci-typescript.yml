name: TypeScript/Node.js CI/CD

on:
  push:
    branches: [main, develop, 'feature/*', 'release/*']
    paths:
      - 'typescript/**'
      - 'samples/apps/copilot-chat-app/webapp/**'
      - '.github/workflows/ci-typescript.yml'
  pull_request:
    branches: [main, develop]
    paths:
      - 'typescript/**'
      - 'samples/apps/copilot-chat-app/webapp/**'
      - '.github/workflows/ci-typescript.yml'
  workflow_dispatch:

env:
  NODE_VERSION: '18'

jobs:
  # Build and test TypeScript/Node.js projects
  build-and-test:
    name: Build & Test TypeScript
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16, 18, 20]

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install dependencies
      run: |
        if [ -d "typescript" ]; then
          cd typescript
          npm ci
        fi
        if [ -d "samples/apps/copilot-chat-app/webapp" ]; then
          cd samples/apps/copilot-chat-app/webapp
          npm ci
        fi

    - name: Lint TypeScript
      run: |
        if [ -d "typescript" ]; then
          cd typescript
          npm run lint
        fi
        if [ -d "samples/apps/copilot-chat-app/webapp" ]; then
          cd samples/apps/copilot-chat-app/webapp
          npm run lint
        fi

    - name: Type check
      run: |
        if [ -d "typescript" ]; then
          cd typescript
          npx tsc --noEmit
        fi

    - name: Run tests
      run: |
        if [ -d "typescript" ]; then
          cd typescript
          npm test
        fi
        if [ -d "samples/apps/copilot-chat-app/webapp" ]; then
          cd samples/apps/copilot-chat-app/webapp
          npm test
        fi

    - name: Build
      run: |
        if [ -d "typescript" ]; then
          cd typescript
          npm run build
        fi
        if [ -d "samples/apps/copilot-chat-app/webapp" ]; then
          cd samples/apps/copilot-chat-app/webapp
          npm run build
        fi

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: typescript-build-${{ matrix.node-version }}
        path: |
          typescript/dist/
          samples/apps/copilot-chat-app/webapp/build/

  # Security scanning
  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    - name: Install dependencies
      run: |
        if [ -d "typescript" ]; then
          cd typescript
          npm ci
        fi

    - name: Run npm audit
      run: |
        if [ -d "typescript" ]; then
          cd typescript
          npm audit --audit-level=high
        fi
        if [ -d "samples/apps/copilot-chat-app/webapp" ]; then
          cd samples/apps/copilot-chat-app/webapp
          npm audit --audit-level=high
        fi

  # Package and publish
  package:
    name: Package TypeScript
    runs-on: ubuntu-latest
    needs: [build-and-test]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        registry-url: 'https://registry.npmjs.org'

    - name: Install and build
      run: |
        if [ -d "typescript" ]; then
          cd typescript
          npm ci
          npm run build
        fi

    - name: Publish to NPM (on release)
      if: startsWith(github.ref, 'refs/tags/typescript-')
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      run: |
        if [ -d "typescript" ]; then
          cd typescript
          npm publish
        fi
