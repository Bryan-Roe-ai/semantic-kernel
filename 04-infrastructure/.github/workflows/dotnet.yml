name: .NET Build and Test

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
        dotnet-version: [6.0.x, 7.0.x]
    timeout-minutes: 30

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Cache
      - name: Cache
      - uses: actions/cache@v4
        with:
          path: |
            ~/.nuget/packages
            ~/.dotnet/tools
          key: ${{ runner.os }}-nuget-${{ matrix.dotnet-version }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-nuget-${{ matrix.dotnet-version }}-
            ${{ runner.os }}-nuget-

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ matrix.dotnet-version }}

      - name: Restore Dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --no-restore

      - name: Test
        run: dotnet test --no-build --verbosity normal --logger "trx;LogFileName=test_results.trx"

      - name: Upload Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: '**/test_results.trx'

      - name: Collect Code Coverage
        run: dotnet test --collect:"Code Coverage"

      - name: Generate and Upload Coverage Report
        run: |
          reportgenerator -reports:**/coverage.cobertura.xml -targetdir:coverage-report
        uses: actions/upload-artifact@v4
        with:
          name: code-coverage-report
          path: coverage-report

      - name: Scan Docker Image
        uses: aquasecurity/trivy-action@v0.11.0
        with:
          image-ref: ghcr.io/${{ env.REPO }}:${{ github.sha }}

      - name: Notify on Slack
        if: always()
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_MESSAGE: |
            Build ${{ github.run_id }} finished with status ${{ job.status }}.
            Logs: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}

      - name: Install systemd
        run: sudo apt-get update && sudo apt-get install -y systemd

      - name: Start systemd
        run: sudo systemctl start systemd

      - name: Verify systemd status
        run: sudo systemctl status systemd

  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    needs: build
    steps:
      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v3
        with:
          app-name: ${{ secrets.AZURE_WEBAPP_NAME }}
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          images: 'ghcr.io/${{ github.repository }}:${{ github.sha }}'

      - name: Run Smoke Tests
        run: curl --fail https://your-app-url/health || exit 1
