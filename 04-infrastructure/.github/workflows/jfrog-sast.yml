# JFrog SAST workflow for source code security analysis
# Automatically runs on push, pull requests, and scheduled events.

name: "JFrog SAST Scan"

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  schedule:
    # Schedule: Every Thursday at 16:34 UTC
    - cron: '34 16 * * 4'
  workflow_dispatch:

env:
  # Mandatory environment variables for JFrog
  JF_URL: ${{ secrets.JF_URL }}
  JF_TOKEN: ${{ secrets.JF_ACCESS_TOKEN }}

jobs:
  analyze:
    name: Analyze
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '16.x'
          cache: 'npm'
          cache: 'npm'

    - name: Cache Node.js modules
      uses: actions/cache@v4
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

    - name: Install and configure JFrog CLI
      run: |
        npm install -g jfrog-cli-v2-jf
        echo $JF_TOKEN | jf c add --interactive=false --url=$JF_URL --access-token-stdin

    - name: Run JFrog SAST
      run: |
        jf audit --sast --format=sarif > jfrog_sast.sarif || echo "JFrog Audit failed"

    - name: Upload output to generate autofix
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: jfrog_sast.sarif

    - name: Notify on Failure
      if: failure()
      run: echo "Workflow failed. Please check logs."
