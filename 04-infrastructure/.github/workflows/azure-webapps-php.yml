# This workflow will build and push a PHP application to an Azure Web App when a commit is pushed to your default branch.
#
# This workflow assumes you have already created the target Azure App Service web app.
# For instructions see https://docs.microsoft.com/en-us/azure/app-service/quickstart-php?pivots=platform-linux
#
# To configure this workflow:
#
# 1. Download the Publish Profile for your Azure Web App. You can download this file from the Overview page of your Web App in the Azure Portal.
#    For more information: https://docs.microsoft.com/en-us/azure/app-service/deploy-github-actions?tabs=applevel#generate-deployment-credentials
#
# 2. Create a secret in your repository named AZURE_WEBAPP_PUBLISH_PROFILE, paste the publish profile contents as the value of the secret.
#    For instructions on obtaining the publish profile see: https://docs.microsoft.com/azure/app-service/deploy-github-actions#configure-the-github-secret
#
# 3. Change the value for the AZURE_WEBAPP_NAME. Optionally, change the AZURE_WEBAPP_PACKAGE_PATH and PHP_VERSION environment variables below.
#
# For more information on GitHub Actions for Azure: https://github.com/Azure/Actions
# For more information on the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# For more samples to get started with GitHub Action workflows to deploy to Azure: https://github.com/Azure/actions-workflow-samples

name: Build and deploy PHP app to Azure Web App

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

env:
  AZURE_WEBAPP_NAME: ${{ secrets.AZURE_WEBAPP_NAME }}
  AZURE_WEBAPP_PACKAGE_PATH: './build'
  PHP_VERSION: '8.x'

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v4
        with:
          php-version: ${{ env.PHP_VERSION }}

      - name: Install dependencies
        run: |
          if [ -f composer.json ]; then
            composer install --no-dev --optimize-autoloader
          else
            echo "composer.json not found. Skipping installation."
          fi

      - name: Run PHP lint
        run: phpcs --standard=PSR12 src/

      - name: Clean up temporary files and directories
        run: sudo rm -rf /tmp/*

      - name: Prune Docker system
        run: docker system prune -f

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: php-app
          path: ./build

  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    needs: build
    environment:
      name: 'Production'

    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: php-app

      - name: Verify available disk space
        run: df -h

      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v4
        with:
          app-name: ${{ secrets.AZURE_WEBAPP_NAME }}
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}

      - name: Post-deployment health check
        run: curl -f https://${{ secrets.AZURE_WEBAPP_NAME }}.azurewebsites.net/health || exit 1
