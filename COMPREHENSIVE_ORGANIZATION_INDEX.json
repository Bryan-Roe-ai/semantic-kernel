{
  "organization_date": "2025-06-21T22:54:24.988997",
  "total_directories": 40,
  "total_files": 306,
  "structure": {
    "01-core-implementations": {
      "type": "directory",
      "files": [],
      "subdirectories": [
        "dotnet",
        "java",
        "python",
        "typescript"
      ]
    },
    "02-ai-workspace": {
      "type": "directory",
      "files": [
        ".env.template",
        ".gitignore",
        "ADVANCED_AI_ENHANCEMENT_REPORT.md",
        "ADVANCED_FEATURES_GUIDE.md",
        "AGI_MCP_README.md",
        "AGI_MCP_SETUP_COMPLETE.md",
        "AI_MONITORING_README.md",
        "AI_MONITORING_SETUP_COMPLETE.md",
        "CLEANUP_SUMMARY.md",
        "DEPLOYMENT_READY.md",
        "DOCKER_GUIDE.md",
        "Dockerfile",
        "ENDLESS_IMPROVEMENT_README.md",
        "GETTING_STARTED.md",
        "GITHUB_ACTIONS_GUIDE.md",
        "GITHUB_PAGES_GUIDE.md",
        "IMPLEMENTATION_COMPLETE.md",
        "ISSUE_RESOLUTION.md",
        "MCP_INTEGRATION_GUIDE.md",
        "README.md",
        "SUCCESS_SUMMARY.md",
        "agi-mcp-config.json",
        "ai_workspace_control.py",
        "ai_workspace_manager.py",
        "docker-compose.dev.yml",
        "docker-compose.yml",
        "get-pip.py",
        "launch.py",
        "launch.sh",
        "mcp-agi-client.py",
        "mcp-agi-server.py",
        "monitoring_config.json",
        "organize_files.py",
        "requirements-basic.txt",
        "requirements-ci.txt",
        "requirements-mcp.txt",
        "requirements-minimal.txt",
        "requirements.txt",
        "requirements_monitoring.txt",
        "setup-agi-mcp.sh",
        "simple-mcp-client.py",
        "welcome.py"
      ],
      "subdirectories": [
        "01-notebooks",
        "02-agents",
        "03-models-training",
        "04-plugins",
        "05-samples-demos",
        "06-backend-services",
        "07-data-resources",
        "08-documentation",
        "09-deployment",
        "10-config",
        "agi-venv",
        "batches",
        "docker",
        "docs",
        "evolution_configs",
        "evolution_framework",
        "learning_modules",
        "logs",
        "models",
        "quantum_config",
        "quantum_framework",
        "scripts",
        "test-deployment",
        "tests"
      ]
    },
    "03-development-tools": {
      "type": "directory",
      "files": [],
      "subdirectories": [
        "notebooks",
        "plugins",
        "prompt_template_samples",
        "samples",
        "tests"
      ]
    },
    "04-infrastructure": {
      "type": "directory",
      "files": [],
      "subdirectories": [
        ".github",
        "circleci",
        "config",
        "configs",
        "scripts"
      ]
    },
    "05-documentation": {
      "type": "directory",
      "files": [],
      "subdirectories": [
        "AgentDocs"
      ]
    },
    "06-deployment": {
      "type": "directory",
      "files": [
        "Dockerfile",
        "deploy-github-pages.sh",
        "deploy.sh",
        "entrypoint.sh.template",
        "validate-github-pages.sh"
      ],
      "subdirectories": [
        "AzureFunctions",
        "aipmakerday"
      ]
    },
    "07-resources": {
      "type": "directory",
      "files": [],
      "subdirectories": [
        "public",
        "resources",
        "uploads"
      ]
    },
    "08-archived-versions": {
      "type": "directory",
      "files": [
        "Singularity",
        "Singularity~HEAD",
        "semantic-kernel~HEAD",
        "semantic-kernel~HEAD_0",
        "semantic-kernel~main"
      ],
      "subdirectories": [
        "git-lfs-3.4.0",
        "internal-semantic-core",
        "semantic-kernel-main",
        "vscode-azure-account"
      ]
    },
    "09-agi-development": {
      "type": "directory",
      "files": [
        "AGI_AUTO_SETUP_COMPLETE.md",
        "AGI_AUTO_SETUP_GUIDE.md",
        "AGI_CHAT_GUIDE.md",
        "AGI_CHAT_README.md",
        "AGI_ENHANCED_SYSTEM_README.md",
        "AGI_GPU_SETUP_COMPLETE.md",
        "AGI_ULTRA_EFFICIENT_GUIDE.md",
        "AGI_ULTRA_IMPLEMENTATION_SUMMARY.md",
        "AI_MONITORING_COMPLETE.md",
        "AI_WORKSPACE_COMPLETION_REPORT.md",
        "AI_WORKSPACE_CONTROL_READY.md",
        "AI_WORKSPACE_CONTROL_SETUP.md",
        "README.md",
        "agi-chat-interface.html",
        "agi_auto_daemon.log",
        "agi_chat_integration.py",
        "agi_client_error.log",
        "agi_enhanced_file_update_system.py",
        "agi_enhanced_updates.log",
        "agi_file_update_system.py",
        "agi_file_update_system_optimized.py",
        "agi_file_updates.log",
        "agi_gpu_integration.py",
        "agi_optimization.log",
        "agi_performance_monitor.py",
        "agi_progression_notebook.ipynb",
        "agi_system_optimizer.py",
        "agi_ultra_efficient_file_system.py",
        "agi_ultra_performance.log",
        "agi_ultra_updates.log",
        "check_agi_auto_status.sh",
        "check_agi_auto_status_optimized.sh",
        "check_agi_ultra_status_dashboard.sh",
        "consciousness_agi.ipynb",
        "launch_agi_auto.sh",
        "launch_agi_auto_optimized.sh",
        "launch_agi_chat.sh",
        "launch_agi_enhanced.sh",
        "launch_agi_enhanced_auto.sh",
        "launch_agi_ultra_efficient.sh",
        "neural_symbolic_agi.ipynb",
        "setup_agi_chat.sh"
      ],
      "subdirectories": []
    },
    "10-configuration": {
      "type": "directory",
      "files": [
        "README.md",
        "REPOSITORY_INDEX.json",
        "__azurite_db_blob__.json",
        "__azurite_db_blob_extent__.json",
        "__azurite_db_queue__.json",
        "__azurite_db_queue_extent__.json",
        "__azurite_db_table__.json",
        "auto-test-config.json",
        "gpu_basic_config.json",
        "gpu_monitoring_results.json",
        "gpu_setup_validation.json",
        "nuget.config",
        "rtx4050_optimization_config.json",
        "vcpkg-configuration.jsonc",
        "workspace_gpu_config.json",
        "workspace_gpu_configs.json"
      ],
      "subdirectories": []
    },
    "11-automation-scripts": {
      "type": "directory",
      "files": [
        "README.md",
        "cleanup-workspace.sh",
        "detect_bryan_contributions.sh",
        "gpu_helpers.py",
        "install_vscode_extension.sh",
        "launch_agi_website.py",
        "launch_extended_automode.sh",
        "maintain_repo.sh",
        "quick.sh",
        "run-auto-tests.ps1",
        "run-auto-tests.sh",
        "setup_gpu.sh",
        "simple-auto-tests.sh",
        "simple_agi_test.py",
        "start_gpu_workspace.sh",
        "status.sh",
        "test-automation-guide.sh",
        "view_extended_health.sh",
        "vscode-task-runner.sh"
      ],
      "subdirectories": []
    },
    "12-documentation": {
      "type": "directory",
      "files": [
        "AUTO_TESTS_COMPLETE.md",
        "AUTO_TEST_README.md",
        "CLEANUP_SUMMARY.md",
        "CUSTOM_DOMAIN_GUIDE.md",
        "ERROR_HANDLING_IMPROVEMENTS.md",
        "EXTENDED_AUTOMODE_INTEGRATION_GUIDE.md",
        "EXTENDED_AUTOMODE_OPTIMIZATION_REPORT.md",
        "GPU_INTEGRATION_GUIDE.md",
        "GPU_INTEGRATION_INSTRUCTIONS.md",
        "ORGANIZATION_REPORT.md",
        "ORGANIZATION_SUCCESS.md",
        "README.md",
        "REPOSITORY_INDEX.md",
        "REPOSITORY_ORGANIZATION_PLAN.md",
        "REPOSITORY_SYNC_COMPLETE.md",
        "WORKSPACE_CLEANUP_COMPLETE.md",
        "WORKSPACE_FIXES_SUMMARY.md",
        "WORKSPACE_INDEX.md"
      ],
      "subdirectories": []
    },
    "13-testing": {
      "type": "directory",
      "files": [
        "AutoTestProgram.cs",
        "AutoTestRunner.cs",
        "README.md",
        "consumer.robot",
        "producer.robot",
        "reporter.robot"
      ],
      "subdirectories": []
    },
    "14-runtime": {
      "type": "directory",
      "files": [
        "README.md",
        "RuntimeException.java",
        "SK.app",
        "dotnet-runtime-6.0.33-win-x64.exe"
      ],
      "subdirectories": []
    },
    "15-web-ui": {
      "type": "directory",
      "files": [
        "README.md",
        "express-rate.js",
        "index.html",
        "index.xml",
        "output.xml",
        "server.js",
        "style.xsl",
        "sw.js"
      ],
      "subdirectories": []
    },
    "16-extensions": {
      "type": "directory",
      "files": [
        "Microsoft.DevSkim.CLI.Commands",
        "README.md"
      ],
      "subdirectories": [
        "DevSkim",
        "vscode-agi-chat-extension",
        "vscode-agi-simple"
      ]
    },
    "17-temporary": {
      "type": "directory",
      "files": [
        "README.md",
        "organization.log"
      ],
      "subdirectories": [
        "__pycache__",
        "logs"
      ]
    },
    "18-data": {
      "type": "directory",
      "files": [
        "README.md",
        "references.fsx"
      ],
      "subdirectories": [
        "defaults",
        "devdata",
        "home",
        "results"
      ]
    },
    "19-miscellaneous": {
      "type": "directory",
      "files": [
        ",",
        "=1.24.0",
        "=4.30.0",
        "AzuriteConfig",
        "BR-AI.txt",
        "Bryan-Roe",
        "Program.fs",
        "SK.AI",
        "ai-chat-launcher.hta",
        "gpu_requirements.txt",
        "gpu_setup_complete.ipynb",
        "requirements.txt",
        "semantic-kernel.fsproj"
      ],
      "subdirectories": [
        "10-configuration",
        "11-automation-scripts",
        "12-documentation",
        "13-testing",
        "14-runtime",
        "15-web-ui",
        "16-extensions",
        "17-temporary",
        "18-data",
        "__blobstorage__",
        "__queuestorage__",
        "agi-backend-server",
        "agi-mcp-server",
        "agi-website",
        "kernel",
        "libraries",
        "llm",
        "mcp-agi-server",
        "node-api-dotnet",
        "src"
      ]
    },
    "DevSkim": {
      "type": "directory",
      "files": [
        ".gitignore",
        "CONTRIBUTING.md",
        "Changelog.md",
        "Directory.Build.props",
        "LICENSE.txt",
        "NOTICE.txt",
        "README.md",
        "SECURITY.md",
        "SUPPORT.md",
        "version.json"
      ],
      "subdirectories": [
        ".github",
        ".vscode",
        "DevSkim-DotNet",
        "DevSkim-VSCode-Plugin",
        "Pipelines",
        "docfx_project",
        "guidance",
        "media",
        "rules"
      ]
    },
    "__blobstorage__": {
      "type": "directory",
      "files": [],
      "subdirectories": []
    },
    "__pycache__": {
      "type": "directory",
      "files": [
        "agi_ultra_efficient_file_system.cpython-312.pyc",
        "gpu_helpers.cpython-312.pyc"
      ],
      "subdirectories": []
    },
    "__queuestorage__": {
      "type": "directory",
      "files": [],
      "subdirectories": []
    },
    "agi-backend-server": {
      "type": "directory",
      "files": [
        "main.py",
        "requirements.txt"
      ],
      "subdirectories": []
    },
    "agi-mcp-server": {
      "type": "directory",
      "files": [
        "agi_config.json",
        "client_example.py",
        "requirements.txt",
        "server.py"
      ],
      "subdirectories": []
    },
    "agi-website": {
      "type": "directory",
      "files": [
        "README.md",
        "index.html",
        "package.json",
        "script.js",
        "server.js",
        "styles.css"
      ],
      "subdirectories": []
    },
    "defaults": {
      "type": "directory",
      "files": [
        "APP_COLOR",
        "APP_NAME",
        "MODEL_NAME",
        "MODEL_PARAMS",
        "MODEL_PROMPT_TEMPLATE",
        "MONGODB_URL"
      ],
      "subdirectories": []
    },
    "devdata": {
      "type": "directory",
      "files": [
        "env-consumer.json",
        "env-producer.json",
        "env-reporter.json",
        "env.json"
      ],
      "subdirectories": [
        "work-items-in"
      ]
    },
    "docs": {
      "type": "directory",
      "files": [
        ".nojekyll",
        "CODE_OF_CONDUCT.md",
        "COMMUNITY.md",
        "CONTRIBUTING.md",
        "COSINE_SIMILARITY.md",
        "Code_Comments.md",
        "DOT_PRODUCT.md",
        "EMBEDDINGS.md",
        "EUCLIDEAN_DISTANCE.md",
        "FAQ.md",
        "FAQS.md",
        "FEATURE_MATRIX.md",
        "GLOSSARY.md",
        "Getting_Started.md",
        "Installation.md",
        "LM_STUDIO_README.md",
        "PLANNER.md",
        "PLANNERS.md",
        "PLUGINS.md",
        "PROMPT_TEMPLATE_LANGUAGE.md",
        "README.md",
        "README_CHAT.md",
        "README_CHAT_APP.md",
        "Repository_Structure.md",
        "SECURITY-01J61242EAQ4X95NFYMEYY0EEG.md",
        "SECURITY.md",
        "SETUP_AND_USAGE.md",
        "SKILLS.md",
        "TRANSPARENCY_FAQS.md",
        "UPDATES.md",
        "automate_runtime.md",
        "custom-llm-studio.html",
        "express-rate.js",
        "index.html",
        "last-deployment.txt",
        "sample-data.md",
        "server.js"
      ],
      "subdirectories": [
        "adr-reports",
        "code_maps",
        "decisions",
        "guides",
        "images",
        "samples"
      ]
    },
    "home": {
      "type": "directory",
      "files": [],
      "subdirectories": [
        "user"
      ]
    },
    "kernel": {
      "type": "directory",
      "files": [],
      "subdirectories": [
        "frontend"
      ]
    },
    "libraries": {
      "type": "directory",
      "files": [
        "AILibrary.py",
        "BotLibrary.py",
        "DummyLibrary.py",
        "Library.py",
        "RobotLibrary.py",
        "__init__.py"
      ],
      "subdirectories": []
    },
    "llm": {
      "type": "directory",
      "files": [
        "model_lab.workspace.config"
      ],
      "subdirectories": [
        "huggingface_microsoft_resnet-50_v1"
      ]
    },
    "logs": {
      "type": "directory",
      "files": [],
      "subdirectories": [
        "extended"
      ]
    },
    "mcp-agi-server": {
      "type": "directory",
      "files": [
        "README.md",
        "__init__.py",
        "__main__.py"
      ],
      "subdirectories": [
        "mcp_agi_server"
      ]
    },
    "node-api-dotnet": {
      "type": "directory",
      "files": [],
      "subdirectories": [
        "samples"
      ]
    },
    "results": {
      "type": "directory",
      "files": [
        "log.html",
        "output.xml",
        "report.html"
      ],
      "subdirectories": []
    },
    "src": {
      "type": "directory",
      "files": [
        "ENHANCED_AUTOMODE_README.md",
        "EXTENDED_AUTOMODE_README.md",
        "app.py",
        "app_fixed.py",
        "auto_mode_config.json",
        "auto_mode_enhanced.py",
        "auto_mode_extended_config.json",
        "auto_mode_extended_operation.py",
        "auto_mode_ultra_config.json",
        "auto_mode_ultra_enhanced.py",
        "backend-starter.py",
        "backend.py",
        "backend_starter_server.py",
        "cloud_deploy.py",
        "collect_llm_training_data.py",
        "diagnose_system.py",
        "error_handling.py",
        "extended_monitoring_dashboard.py",
        "file_analyzer.py",
        "finetune_gpt2_custom.py",
        "metrics_exporter.py",
        "metrics_logger.py",
        "plugin_hotreload.py",
        "self_heal.py",
        "setup.py",
        "simple_llm_demo.py",
        "start_backend.py",
        "start_chat_unified.py",
        "start_extended_automode.py",
        "startup_enhanced.py",
        "startup_ultra_enhanced.py",
        "test_backend.py",
        "test_system.py"
      ],
      "subdirectories": [
        "__pycache__"
      ]
    },
    "vscode-agi-chat-extension": {
      "type": "directory",
      "files": [
        "package-simple.json",
        "package.json",
        "tsconfig.json"
      ],
      "subdirectories": [
        "media",
        "node_modules",
        "src"
      ]
    },
    "vscode-agi-simple": {
      "type": "directory",
      "files": [
        "extension.js",
        "package.json"
      ],
      "subdirectories": []
    }
  }
}