name: "CodeQL"

on:
  push:
    branches:
      - "main"
  pull_request:
    branches:
      - "main"
  schedule:
    - cron: "17 11 * * 2" # Weekly CodeQL analysis every Tuesday at 11:17 UTC
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  analyze:
    name: Analyze
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: ["csharp", "python", "java", "cpp", "html"]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # Cache dependencies
      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml', '**/settings.xml') }}-v3
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Cache Python dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}-v3
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Cache npm dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}-v3
          restore-keys: |
            ${{ runner.os }}-npm-

      # CodeQL Init (with query file check)
      - name: Check custom CodeQL query
        id: ssrf_query
        run: |
          if [ -f codeql-queries/ssrf-detection.ql ]; then
            echo "query_exists=true" >> $GITHUB_OUTPUT
          else
            echo "query_exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v4
        with:
          languages: ${{ matrix.language }}
          queries: ${{ steps.ssrf_query.outputs.query_exists == 'true' && '+security-extended,security-and-quality,codeql-queries/ssrf-detection.ql' || 'security-extended,security-and-quality' }}

      # Build steps
      - name: Autobuild
        if: ${{ matrix.language != 'java' && matrix.language != 'cpp' }}
        uses: github/codeql-action/autobuild@v4

      - name: Manual Build (C++)
        if: ${{ matrix.language == 'cpp' }}
        run: |
          mkdir -p build
          cd build
          cmake ..
          make
        shell: bash

      - name: Setup JDK
        if: ${{ matrix.language == 'java' }}
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: microsoft
          cache: maven

      - name: Build Java
        if: ${{ matrix.language == 'java' }}
        run: ./mvnw -B -DskipTests -Pcompile-jdk17 clean install --file pom.xml
        working-directory: java

      - name: Run Java Tests
        if: ${{ matrix.language == 'java' }}
        run: ./mvnw test --file pom.xml
        working-directory: java

      # Python lint and test
      - name: Install Python tools
        if: ${{ matrix.language == 'python' }}
        run: pip install --upgrade mypy flake8 black pytest

      - name: Run Python Linters
        if: ${{ matrix.language == 'python' }}
        run: |
          mypy .
          flake8 .
          black --check .

      - name: Run Python Tests
        if: ${{ matrix.language == 'python' }}
        run: pytest

      # HTML lint (only if package.json exists)
      - name: Run HTML lint (npm)
        if: ${{ matrix.language == 'html' && hashFiles('**/package.json') != '' }}
        run: npm run lint

      # CodeQL Analysis
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v4
        with:
          category: "/language:${{ matrix.language }}"

      # npm audit (only if package.json exists)
      - name: Run npm audit
        if: ${{ hashFiles('**/package.json') != '' }}
        run: |
          npm audit --json > npm-audit-results.json || echo "NPM Audit detected vulnerabilities"
        continue-on-error: true

      # Archive CodeQL Results
      - name: Upload CodeQL Results
        uses: actions/upload-artifact@v3
        with:
          name: codeql-results
          path: codeql-results/

      # Optionally, trigger another workflow on success
      - name: Trigger Ensure Success Workflow
        if: ${{ success() }}
        run: |
          gh workflow run ensure-success.yml

      # Upload CodeQL results to GitHub Security tab
      - name: Upload CodeQL results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: codeql-results.sarif

      # Clean up
      - name: Clean up temporary files and directories
        run: sudo rm -rf /tmp/*

      - name: Prune Docker system
        run: docker system prune -f
