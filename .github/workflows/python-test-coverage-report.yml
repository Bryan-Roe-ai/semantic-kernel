name: Python Test Coverage Report

on:
  workflow_run:
    workflows: ["Python Test Coverage"]
    types:
      - completed

permissions:
  contents: read
  pull-requests: write

jobs:
  python-test-coverage-report:
    runs-on: ubuntu-latest
    if: github.event.workflow_run.conclusion == 'success'
    continue-on-error: false
    defaults:
      run:
        working-directory: python
    steps:
      # Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      # Download coverage report
      - name: Download coverage report
        uses: actions/download-artifact@v4
        with:
          github-token: ${{ secrets.GH_ACTIONS_PR_WRITE }}
          run-id: ${{ github.event.workflow_run.id }}
          path: ./python
          merge-multiple: true

      # Display structure of downloaded files
      - name: Validate and Display Files
        run: |
          echo "Listing downloaded files:"
          ls -R ./python
          if [ ! -f ./python/python-coverage.txt ] || [ ! -f ./python/pytest.xml ]; then
            echo "Required files are missing. Exiting."
            exit 1
          fi

      # Read and set PR number
      - name: Read and set PR number
        run: |
          PR_NUMBER=$(cat pr_number)
          echo "PR number: $PR_NUMBER"
          echo "PR_NUMBER=$PR_NUMBER" >> $GITHUB_ENV

      # Generate Pytest coverage comment
      - name: Pytest coverage comment
        id: coverageComment
        uses: MishaKav/pytest-coverage-comment@v1.1.53
        with:
          github-token: ${{ secrets.GH_ACTIONS_PR_WRITE }}
          issue-number: ${{ env.PR_NUMBER }}
          pytest-coverage-path: python/python-coverage.txt
          title: "Python Test Coverage Report"
          badge-title: "Python Test Coverage"
          junitxml-title: "Python Unit Test Overview"
          junitxml-path: python/pytest.xml
          default-branch: "main"
          report-only-changed-files: true
