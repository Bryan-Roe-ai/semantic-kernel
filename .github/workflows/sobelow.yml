# Sobelow Workflow: Improved and Optimized
# This workflow integrates Sobelow for security-focused static analysis
# and includes additional best practices for security, performance, and maintainability.

name: Sobelow

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  schedule:
    - cron: '30 19 * * 2' # Scheduled to run every Tuesday at 19:30 UTC

permissions:
  contents: read
  security-events: write # Required for uploading SARIF results
  actions: read # For private repositories to get Action run statuses

jobs:
  security-scan:
    name: Run Sobelow Security Scan
    runs-on: ubuntu-latest
    steps:
      # Checkout the codebase
      - name: Checkout code
        uses: actions/checkout@v4

      # Run Sobelow static analysis
      - name: Run Sobelow Analysis
        uses: sobelow/action@v1.0.1

      # Upload SARIF results
      - name: Upload SARIF Report
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: results.sarif

  docker-setup:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    steps:
      # Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Log in to GitHub Container Registry
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Build and push Docker image
      - name: Build and Push Docker Image
        run: |
          echo "Building and pushing Docker image..."
          docker build . --file Dockerfile --tag ghcr.io/${{ github.repository }}/my-image-name:${{ github.sha }}
          docker push ghcr.io/${{ github.repository }}/my-image-name:${{ github.sha }}

  verify-dependencies:
    name: Verify Project Dependencies
    runs-on: ubuntu-latest
    needs: docker-setup
    steps:
      # Verify installations of dependencies
      - name: Verify Node.js Dependencies
        run: npm list || echo "NPM dependencies verification failed" && exit 1

      - name: Verify Python Dependencies
        run: pip list || echo "Python dependencies verification failed" && exit 1

      - name: Verify .NET SDKs
        run: dotnet --list-sdks || echo ".NET SDKs verification failed" && exit 1

  run-api:
    name: Run API Server
    runs-on: ubuntu-latest
    needs: verify-dependencies
    steps:
      # Run the API server
      - name: Run the API Server
        run: |
          echo "Running the API server..."
          npm start
