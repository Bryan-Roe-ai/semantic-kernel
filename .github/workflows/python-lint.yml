name: Python Code Quality Checks
<<<<<<< head
<<<<<<< Updated upstream
<<<<<<< Updated upstream
<<<<<<< Updated upstream
<<<<<<< Updated upstream
<<<<<<< Updated upstream
=======
=======
>>>>>>> Stashed changes
=======
>>>>>>> Stashed changes
=======
>>>>>>> Stashed changes
=======
>>>>>>> Stashed changes
<<<<<<< main
=======
=======
>>>>>>> origin/main
name: Python Lint
>>>>>>> origin/main
<<<<<<< Updated upstream
<<<<<<< Updated upstream
<<<<<<< Updated upstream
<<<<<<< Updated upstream
>>>>>>> Stashed changes
=======
>>>>>>> Stashed changes
=======
>>>>>>> Stashed changes
=======
>>>>>>> Stashed changes
=======
>>>>>>> Stashed changes
on:
  workflow_dispatch:
  pull_request:
    branches: [ "main", "feature*" ]
    paths:
      - 'python/**'

jobs:
  pre-commit:
    if: '!cancelled()'
<<<<<<< head
<<<<<<< Updated upstream
<<<<<<< Updated upstream
<<<<<<< Updated upstream
<<<<<<< Updated upstream
<<<<<<< Updated upstream
=======
=======
>>>>>>> Stashed changes
=======
>>>>>>> Stashed changes
=======
>>>>>>> Stashed changes
=======
>>>>>>> Stashed changes
<<<<<<< main
=======
=======
>>>>>>> origin/main
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10"]
    runs-on: ubuntu-latest
    continue-on-error: true
    defaults:
      run:
        working-directory: python
    env:
      # Configure a constant location for the uv cache
      UV_CACHE_DIR: /tmp/.uv-cache
    steps:
      - uses: actions/checkout@v4
      - name: Set up uv
        run: curl -LsSf https://astral.sh/uv/install.sh | sh
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: "poetry"
<<<<<<< main
  ruff:
>>>>>>> origin/main
<<<<<<< Updated upstream
<<<<<<< Updated upstream
<<<<<<< Updated upstream
<<<<<<< Updated upstream
>>>>>>> Stashed changes
=======
>>>>>>> Stashed changes
=======
>>>>>>> Stashed changes
=======
>>>>>>> Stashed changes
=======
>>>>>>> Stashed changes
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10"]
    runs-on: ubuntu-latest
    continue-on-error: true
    defaults:
      run:
        working-directory: python
    env:
      # Configure a constant location for the uv cache
      UV_CACHE_DIR: /tmp/.uv-cache
    steps:
      - uses: actions/checkout@v4
<<<<<<< Updated upstream
<<<<<<< Updated upstream
<<<<<<< Updated upstream
<<<<<<< Updated upstream
<<<<<<< Updated upstream
=======
<<<<<<< main
>>>>>>> Stashed changes
=======
<<<<<<< main
>>>>>>> Stashed changes
=======
<<<<<<< main
>>>>>>> Stashed changes
=======
<<<<<<< main
>>>>>>> Stashed changes
=======
<<<<<<< main
>>>>>>> Stashed changes
      - name: Set up uv
        run: curl -LsSf https://astral.sh/uv/install.sh | sh
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
<<<<<<< Updated upstream
<<<<<<< Updated upstream
<<<<<<< Updated upstream
<<<<<<< Updated upstream
<<<<<<< Updated upstream
=======
=======
>>>>>>> Stashed changes
=======
>>>>>>> Stashed changes
=======
>>>>>>> Stashed changes
=======
>>>>>>> Stashed changes
=======
      - name: Install poetry
        run: pipx install poetry
      - uses: actions/setup-python@v5
<<<<<<< head
>>>>>>> origin/main
<<<<<<< Updated upstream
<<<<<<< Updated upstream
<<<<<<< Updated upstream
<<<<<<< Updated upstream
>>>>>>> Stashed changes
=======
>>>>>>> Stashed changes
=======
>>>>>>> Stashed changes
=======
>>>>>>> Stashed changes
=======
>>>>>>> Stashed changes
=======
>>>>>>> origin/main
        with:
          python-version: ${{ matrix.python-version }}
<<<<<<< main
=======
<<<<<<< main
>>>>>>> origin/main
          cache: "poetry"
<<<<<<< main
          cache-dependency-path: "python/pyproject.toml"
      - name: Install SemanticKernel
        run: cd python && poetry install --no-ansi
      - name: Run lint
        run: cd python && poetry run ruff check .
  black:
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8"]
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - run: echo "/root/.local/bin" >> $GITHUB_PATH
      - uses: actions/checkout@v4
      - name: Install poetry
        run: pipx install poetry
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: "poetry"
          cache-dependency-path: "python/pyproject.toml"
      - name: Install SemanticKernel
        run: cd python && poetry install --no-ansi
      - name: Run lint
        run: cd python && poetry run black --check .
      - name: Install dependencies
        run: cd python && poetry install
      - uses: pre-commit/action@v3.0.1
<<<<<<< head
<<<<<<< main
<<<<<<< Updated upstream
<<<<<<< Updated upstream
<<<<<<< Updated upstream
<<<<<<< Updated upstream
<<<<<<< Updated upstream
=======
<<<<<<< main
>>>>>>> Stashed changes
=======
<<<<<<< main
>>>>>>> Stashed changes
=======
<<<<<<< main
>>>>>>> Stashed changes
=======
<<<<<<< main
>>>>>>> Stashed changes
=======
<<<<<<< main
>>>>>>> Stashed changes
=======
>>>>>>> origin/main-auto-tune
>>>>>>> origin/main
=======
<<<<<<< Updated upstream
<<<<<<< Updated upstream
<<<<<<< Updated upstream
<<<<<<< Updated upstream
<<<<<<< Updated upstream
=======
=======
>>>>>>> Stashed changes
=======
>>>>>>> Stashed changes
=======
>>>>>>> Stashed changes
=======
>>>>>>> Stashed changes
=======
=======
>>>>>>> origin/main
      - name: Restore uv cache
        uses: actions/cache@v4
        with:
          path: ${{  env.UV_CACHE_DIR  }}
          key: uv-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('**/uv.lock') }}
      - name: Install the project
        run: uv sync --all-extras --dev
      - uses: pre-commit/action@v3.0.1
        with:
          python-version: ${{ matrix.python-version }}
<<<<<<< head
>>>>>>> origin/main
<<<<<<< Updated upstream
<<<<<<< Updated upstream
<<<<<<< Updated upstream
<<<<<<< Updated upstream
>>>>>>> Stashed changes
=======
>>>>>>> Stashed changes
=======
>>>>>>> Stashed changes
=======
>>>>>>> Stashed changes
=======
>>>>>>> Stashed changes
=======
>>>>>>> origin/main
      - name: Restore uv cache
        uses: actions/cache@v4
        with:
          path: ${{  env.UV_CACHE_DIR  }}
          key: uv-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('**/uv.lock') }}
      - name: Install the project
        run: uv sync --all-extras --dev
      - uses: pre-commit/action@v3.0.1
        with:
          extra_args: --config python/.pre-commit-config.yaml
      - name: Minimize uv cache
        run: uv cache prune --ci
<<<<<<< head
<<<<<<< Updated upstream
<<<<<<< Updated upstream
<<<<<<< Updated upstream
<<<<<<< Updated upstream
<<<<<<< Updated upstream
>>>>>>> upstream/main
=======
=======
>>>>>>> Stashed changes
=======
>>>>>>> Stashed changes
=======
>>>>>>> Stashed changes
=======
>>>>>>> Stashed changes
<<<<<<< main
>>>>>>> upstream/main
=======
<<<<<<< main
>>>>>>> upstream/main
=======
>>>>>>> origin/main
>>>>>>> origin/main
<<<<<<< Updated upstream
<<<<<<< Updated upstream
<<<<<<< Updated upstream
<<<<<<< Updated upstream
>>>>>>> Stashed changes
=======
>>>>>>> Stashed changes
=======
>>>>>>> Stashed changes
=======
>>>>>>> Stashed changes
=======
>>>>>>> Stashed changes
=======
<<<<<<< main
>>>>>>> upstream/main
=======
>>>>>>> origin/main
>>>>>>> origin/main
