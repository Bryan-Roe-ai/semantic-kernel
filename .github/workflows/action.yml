name: 'Attest Build Provenance'
description: 'Generate provenance attestations for build artifacts'
author: 'Bryan Roe / Your Team'

branding:
  color: 'blue'
  icon: 'lock'

inputs:
  subject-path:
    description: >
      Path(s) to artifacts to attest. Specify only one of 'subject-path', 'subject-digest', or 'subject-checksums'.
    required: false
  subject-digest:
    description: >
      Digest in "algo:hex" form. Specify only one of 'subject-path', 'subject-digest', or 'subject-checksums'.
    required: false
  subject-name:
    description: >
      Subject name for the attestation. Required if using 'subject-digest'.
    required: false
  subject-checksums:
    description: >
      Path to checksums file with digest+name. Specify only one input type.
    required: false
  push-to-registry:
    description: >
      Push provenance to registry. Requires 'subject-name' (FQIN) and 'subject-digest'.
    default: false
    required: false
  show-summary:
    description: >
      Attach attestation summary to workflow run.
    default: true
    required: false
  github-token:
    description: >
      GitHub token for API requests.
    default: ${{ secrets.GITHUB_TOKEN }}
    required: false

outputs:
  bundle-path:
    description: 'Path to the attestation bundle file.'
    value: ${{ steps.attest.outputs.bundle-path }}
  attestation-id:
    description: 'Attestation ID.'
    value: ${{ steps.attest.outputs.attestation-id }}
  attestation-url:
    description: 'Attestation summary URL.'
    value: ${{ steps.attest.outputs.attestation-url }}

runs:
  using: 'composite'
  steps:
    # Validate that only one subject input is set
    - name: Validate subject input
      shell: bash
      run: |
        count=0
        [[ -n "${{ inputs.subject-path }}" ]] && count=$((count+1))
        [[ -n "${{ inputs.subject-digest }}" ]] && count=$((count+1))
        [[ -n "${{ inputs.subject-checksums }}" ]] && count=$((count+1))
        if [[ $count -ne 1 ]]; then
          echo "Error: Specify exactly one of subject-path, subject-digest, or subject-checksums."
          exit 1
        fi

    - name: Generate Build Provenance Predicate
      uses: actions/attest-build-provenance/predicate@v1.1.5
      id: generate-build-provenance-predicate

    - name: Attest
      uses: actions/attest@v2.4.0
      id: attest
      with:
        subject-path: ${{ inputs.subject-path }}
        subject-digest: ${{ inputs.subject-digest }}
        subject-name: ${{ inputs.subject-name }}
        subject-checksums: ${{ inputs.subject-checksums }}
        predicate-type: ${{ steps.generate-build-provenance-predicate.outputs.predicate-type }}
        predicate: ${{ steps.generate-build-provenance-predicate.outputs.predicate }}
        push-to-registry: ${{ inputs.push-to-registry }}
        show-summary: ${{ inputs.show-summary }}
        github-token: ${{ inputs.github-token }}

    - name: Output summary (optional)
      shell: bash
      run: |
        echo "Attestation bundle: ${{ steps.attest.outputs.bundle-path }}"
        echo "Attestation ID: ${{ steps.attest.outputs.attestation-id }}"
        echo "Attestation URL: ${{ steps.attest.outputs.attestation-url }}"
