name: AI Workspace Deployment

on:
  push:
    branches: [ "main" ]
    paths:
      - "ai-workspace/**"
  pull_request:
    branches: [ "main" ]
    paths:
      - "ai-workspace/**"
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment
concurrency:
  group: "ai-workspace-deploy"
  cancel-in-progress: false

env:
  PYTHON_VERSION: "3.11"
  NODE_VERSION: "18"

jobs:
  # Test the AI workspace
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        
    - name: Create virtual environment
      run: |
        cd ai-workspace
        python -m venv venv
        source venv/bin/activate
        pip install --upgrade pip
        
    - name: Install dependencies
      run: |
        cd ai-workspace
        source venv/bin/activate
        pip install -r requirements-minimal.txt
        
    - name: Run integration tests
      run: |
        cd ai-workspace
        chmod +x scripts/integration_test.sh
        bash scripts/integration_test.sh
        
    - name: Test API endpoints
      run: |
        cd ai-workspace
        chmod +x scripts/test_api_endpoints.sh
        # Start server in background
        source venv/bin/activate
        cd 06-backend-services
        python simple_api_server.py --port 8000 &
        sleep 5
        cd ..
        bash scripts/test_api_endpoints.sh

  # Build static assets
  build:
    needs: test
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        
    - name: Install Python dependencies
      run: |
        cd ai-workspace
        python -m venv venv
        source venv/bin/activate
        pip install --upgrade pip
        pip install -r requirements-minimal.txt
        
    - name: Prepare deployment artifacts
      run: |
        cd ai-workspace
        
        # Create deployment directory
        mkdir -p dist
        
        # Copy static files
        cp -r 05-samples-demos/* dist/
        
        # Copy backend services
        cp -r 06-backend-services dist/backend
        
        # Copy requirements
        cp requirements-minimal.txt dist/
        
        # Copy Docker files
        cp Dockerfile dist/
        cp docker-compose.yml dist/
        cp docker-compose.dev.yml dist/
        
        # Copy documentation
        cp README.md dist/
        cp SUCCESS_SUMMARY.md dist/
        cp ISSUE_RESOLUTION.md dist/
        
        # Create a simple deployment info file
        echo "AI Workspace Deployment - $(date)" > dist/deployment-info.txt
        echo "Commit: ${{ github.sha }}" >> dist/deployment-info.txt
        echo "Branch: ${{ github.ref_name }}" >> dist/deployment-info.txt
        
    - name: Upload deployment artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ai-workspace-dist
        path: ai-workspace/dist/
        retention-days: 30

  # Deploy to GitHub Pages
  deploy-pages:
    if: github.ref == 'refs/heads/main'
    needs: build
    runs-on: ubuntu-latest
    
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
      
    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        name: ai-workspace-dist
        path: ./dist
        
    - name: Setup Pages
      uses: actions/configure-pages@v4
      
    - name: Upload to GitHub Pages
      uses: actions/upload-pages-artifact@v3
      with:
        path: './dist'
        
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4

  # Build and push Docker image
  docker-build:
    if: github.ref == 'refs/heads/main'
    needs: test
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Log in to Docker Hub
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        
    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: |
          ${{ secrets.DOCKER_USERNAME }}/ai-workspace
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=sha,prefix={{branch}}-
          type=raw,value=latest,enable={{is_default_branch}}
          
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: ./ai-workspace
        platforms: linux/amd64,linux/arm64
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

  # Deploy status notification
  notify:
    if: always()
    needs: [test, build, deploy-pages, docker-build]
    runs-on: ubuntu-latest
    
    steps:
    - name: Deployment Status
      run: |
        echo "üöÄ AI Workspace Deployment Summary"
        echo "=================================="
        echo "Test Status: ${{ needs.test.result }}"
        echo "Build Status: ${{ needs.build.result }}"
        echo "Pages Deploy: ${{ needs.deploy-pages.result }}"
        echo "Docker Build: ${{ needs.docker-build.result }}"
        echo ""
        if [[ "${{ needs.test.result }}" == "success" && "${{ needs.build.result }}" == "success" ]]; then
          echo "‚úÖ Deployment completed successfully!"
          echo "üåê Website: https://${{ github.repository_owner }}.github.io/semantic-kernel"
        else
          echo "‚ùå Deployment failed - check logs above"
          exit 1
        fi
