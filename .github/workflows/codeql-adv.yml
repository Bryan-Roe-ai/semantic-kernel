name: "CodeQL Advanced"

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  schedule:
    - cron: '0 0 * * 1' # Weekly at midnight UTC on Mondays

permissions:
  contents: read
  security-events: write

jobs:
  analyze:
    name: Analyze (${{ matrix.language }})
    runs-on: ${{ (matrix.language == 'swift' && 'macos-latest') || 'ubuntu-latest' }}
    strategy:
      fail-fast: false
      matrix:
        include:
        - language: csharp
          build-mode: autobuild
        - language: python
          build-mode: autobuild
        - language: jupyter-notebook
          build-mode: autobuild
        - language: java
          build-mode: autobuild
        - language: cpp
          build-mode: autobuild
        - language: html
          build-mode: autobuild

    steps:
    # Checkout the repository with submodules
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        submodules: true

    # Cache dependencies based on the language
    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cache
          ~/.m2
          ~/.gradle/caches
          ~/.gradle/wrapper
          ~/.cargo
          ~/.nuget/packages
          .venv
        key: ${{ runner.os }}-build-${{ matrix.language }}-${{ hashFiles('**/package-lock.json', '**/pom.xml', '**/build.gradle', '**/*.csproj', '**/Cargo.lock', '**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ matrix.language }}-

    # Set up dependencies based on the language
    - name: Set up dependencies
      run: |
        if [ "${{ matrix.language }}" == "csharp" ]; then
          dotnet restore
        elif [ "${{ matrix.language }}" == "python" ]; then
          pip install -r requirements.txt
        elif [ "${{ matrix.language }}" == "jupyter-notebook" ]; then
          pip install -r requirements.txt
          python -m ipykernel install --user
        elif [ "${{ matrix.language }}" == "java" ]; then
          ./gradlew build
        elif [ "${{ matrix.language }}" == "cpp" ]; then
          make
        elif [ "${{ matrix.language }}" == "html" ]; then
          echo "No dependencies to set up for HTML."
        else
          echo "Unsupported language: ${{ matrix.language }}"
          exit 1

    # Run lint
    - name: Run lint
      run: npm run lint

    # Initialize CodeQL
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v4
      with:
        languages: ${{ matrix.language }}
        build-mode: ${{ matrix.build-mode }}

    # Perform CodeQL Analysis
    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v4
      with:
        category: "/language:${{matrix.language}}"

    # Clean up temporary files and directories
    - name: Clean up temporary files and directories
      run: sudo rm -rf /tmp/*

    # Prune Docker system
    - name: Prune Docker system
      run: docker system prune -f

    # Debugging Information on Failure
    - name: Debugging Information
      if: failure()
      run: |
        echo "Runner OS: ${{ runner.os }}"
        echo "Language: ${{ matrix.language }}"
        echo "Commit: ${{ github.sha }}"
        echo "Branch: ${{ github.ref_name }}"
        echo "Workflow URL: ${{ github.run_url }}"

    # Notify the team on failure
    - name: Notify team on failure
      if: failure()
      uses: slackapi/slack-github-action@v2
      with:
        slack-message: |
          CodeQL analysis failed for ${{ matrix.language }}.
          Branch: ${{ github.ref_name }}
          Commit: ${{ github.sha }}
          Workflow URL: ${{ github.run_url }}

    # Notify the team on success
    - name: Notify team on success
      if: success()
      uses: slackapi/slack-github-action@v2
      with:
        slack-message: |
          CodeQL analysis succeeded for ${{ matrix.language }}.
          Branch: ${{ github.ref_name }}
          Commit: ${{ github.sha }}
          Workflow URL: ${{ github.run_url }}
