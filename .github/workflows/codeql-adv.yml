name: "CodeQL Advanced"

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  schedule:
    - cron: '39 23 * * 1'

jobs:
  analyze:
    name: Analyze (${{ matrix.language }})
    runs-on: ${{ (matrix.language == 'swift' && 'macos-latest') || 'ubuntu-latest' }}
    permissions:
      security-events: write
      packages: read
      actions: read
      contents: read

    strategy:
      fail-fast: false
      matrix:
        include:
        - language: c-cpp
          build-mode: autobuild
        - language: csharp
          build-mode: autobuild
        - language: java-kotlin
          build-mode: autobuild
        - language: javascript-typescript
          build-mode: autobuild
        - language: python
          build-mode: autobuild
        - language: ruby
          build-mode: autobuild
        - language: html
          build-mode: autobuild
        - language: jupyter-notebook
          build-mode: autobuild
        - language: other
          build-mode: autobuild

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        submodules: true

    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cache
          ~/.m2
          ~/.gradle/caches
          ~/.gradle/wrapper
          ~/.cargo
        key: ${{ runner.os }}-build-${{ matrix.language }}-${{ hashFiles('**/package-lock.json', '**/pom.xml', '**/build.gradle', '**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ matrix.language }}-

    - name: Set up dependencies
      run: |
        if [ "${{ matrix.language }}" == "javascript-typescript" ]; then
          npm install
        elif [ "${{ matrix.language }}" == "python" ]; then
          pip install -r requirements.txt
        fi

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: ${{ matrix.language }}
        build-mode: ${{ matrix.build-mode }}

    - if: matrix.build-mode == 'manual'
      shell: bash
      run: |
        echo 'If you are using a "manual" build mode for one or more of the' \
          'languages you are analyzing, replace this with the commands to build' \
          'your code, for example:'
        echo '  make bootstrap'
        echo '  make release'
        exit 1

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3
      with:
        category: "/language:${{matrix.language}}"

    - name: Notify team
      if: failure()
      uses: some-notification-action
      with:
        message: "CodeQL analysis failed for ${{ matrix.language }}"
