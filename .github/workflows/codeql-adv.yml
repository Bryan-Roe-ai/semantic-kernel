name: "CodeQL Advanced"

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  schedule:
    - cron: '0 0 * * 1' # Weekly at midnight UTC on Mondays

permissions:
  security-events: write
  contents: read

jobs:
  analyze:
    name: Analyze (${{ matrix.language }})
    runs-on: ${{ (matrix.language == 'swift' && 'macos-latest') || 'ubuntu-latest' }}
    strategy:
      fail-fast: false
      matrix:
        include:
        - language: csharp
          build-mode: autobuild
        - language: python
          build-mode: autobuild
        - language: jupyter-notebook
          build-mode: autobuild

    steps:
    # Checkout the repository with submodules
    - name: Checkout repository
      uses: actions/checkout@v4.0.0
      with:
        submodules: true

    # Cache dependencies based on the language
    - name: Cache dependencies
      uses: actions/cache@v3.0.0
      with:
        path: |
          ~/.cache
          ~/.m2
          ~/.gradle/caches
          ~/.gradle/wrapper
          ~/.cargo
          ~/.nuget/packages
          .venv
        key: ${{ runner.os }}-build-${{ matrix.language }}-${{ hashFiles('**/package-lock.json', '**/pom.xml', '**/build.gradle', '**/Cargo.lock', '**/requirements.lock') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ matrix.language }}-

    # Set up dependencies based on the language
    - name: Set up dependencies
      run: |
        if [ "${{ matrix.language }}" == "javascript-typescript" ]; then
          npm install
        elif [ "${{ matrix.language }}" == "python" ]; then
          pip install -r requirements.txt
        elif [ "${{ matrix.language }}" == "csharp" ]; then
          dotnet restore
        elif [ "${{ matrix.language }}" == "java-kotlin" ]; then
          ./gradlew build
        elif [ "${{ matrix.language }}" == "other" ]; then
          echo "No dependencies to set up for 'other' language."
        else
          echo "Unsupported language: ${{ matrix.language }}"
          exit 1

    # Initialize CodeQL
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: ${{ matrix.language }}
        build-mode: ${{ matrix.build-mode }}

    # Manual build mode placeholder (optional)
    - if: matrix.build-mode == 'manual'
      shell: bash
      run: |
        echo "Insert manual build commands here."
        # Example:
        # make bootstrap
        # make release

    # Perform CodeQL Analysis
    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3
      with:
        category: "/language:${{matrix.language}}"

    # Notify the team on failure
    - name: Notify team on failure
      if: failure()
      uses: slackapi/slack-github-action@v1.23.0
      with:
        slack-message: "CodeQL analysis failed for ${{ matrix.language }}"

    # Notify the team on success
    - name: Notify team on success
      if: success()
      uses: slackapi/slack-github-action@v1.23.0
      with:
        slack-message: "CodeQL analysis succeeded for ${{ matrix.language }}"
