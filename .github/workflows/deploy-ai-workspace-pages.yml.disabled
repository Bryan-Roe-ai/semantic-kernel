name: Deploy AI Workspace to GitHub Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]
    paths:
      - "ai-workspace/**"
      - "docs/**"
      - ".github/workflows/deploy-ai-workspace-pages.yml"

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "ai-workspace-pages"
  cancel-in-progress: false

jobs:
  # Sync AI workspace content to docs folder and deploy
  deploy:
    runs-on: ubuntu-latest

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Sync AI workspace to docs folder
        run: |
          echo "� Syncing AI workspace content to docs folder for GitHub Pages..."

          # Copy main HTML files
          if [ -f "ai-workspace/05-samples-demos/index.html" ]; then
            cp "ai-workspace/05-samples-demos/index.html" docs/
            echo "✅ Synced index.html"
          else
            echo "❌ ai-workspace/05-samples-demos/index.html not found"
            exit 1
          fi

          if [ -f "ai-workspace/05-samples-demos/custom-llm-studio.html" ]; then
            cp "ai-workspace/05-samples-demos/custom-llm-studio.html" docs/
            echo "✅ Synced custom-llm-studio.html"
          else
            echo "❌ ai-workspace/05-samples-demos/custom-llm-studio.html not found"
            exit 1
          fi

          # Copy JavaScript files if they exist
          if [ -f "ai-workspace/05-samples-demos/server.js" ]; then
            cp "ai-workspace/05-samples-demos/server.js" docs/
            echo "✅ Synced server.js"
          fi

          if [ -f "ai-workspace/05-samples-demos/express-rate.js" ]; then
            cp "ai-workspace/05-samples-demos/express-rate.js" docs/
            echo "✅ Synced express-rate.js"
          fi

          # Copy samples directory (resolve symlinks)
          if [ -d "ai-workspace/05-samples-demos/samples" ]; then
            rm -rf docs/samples 2>/dev/null || true
            cp -rL "ai-workspace/05-samples-demos/samples" docs/ 2>/dev/null || echo "Samples copied with potential symlink warnings"
            echo "✅ Synced samples directory"
          fi

          # Ensure .nojekyll exists
          touch docs/.nojekyll
          echo "✅ Ensured .nojekyll exists"

          # Create deployment timestamp
          echo "$(date -u +"%Y-%m-%dT%H:%M:%SZ")" > docs/last-deployment.txt
          echo "✅ Updated deployment timestamp"

      - name: Validate docs content
        run: |
          echo "🔍 Validating docs content for GitHub Pages..."

          # Check required files exist
          required_files=("index.html" "custom-llm-studio.html" ".nojekyll")
          for file in "${required_files[@]}"; do
            if [ -f "docs/$file" ]; then
              echo "✅ Found: $file"
            else
              echo "❌ Missing: $file"
              exit 1
            fi
          done

          # Check HTML files are valid
          if grep -q "<!DOCTYPE html>" docs/index.html; then
            echo "✅ index.html has valid DOCTYPE"
          else
            echo "❌ index.html missing DOCTYPE"
            exit 1
          fi

          # Check file sizes
          index_size=$(stat -c%s "docs/index.html")
          studio_size=$(stat -c%s "docs/custom-llm-studio.html")

          echo "📊 index.html: $index_size bytes"
          echo "📊 custom-llm-studio.html: $studio_size bytes"

          if [ $index_size -lt 100 ]; then
            echo "❌ index.html too small"
            exit 1
          fi

          if [ $studio_size -lt 100 ]; then
            echo "❌ custom-llm-studio.html too small"
            exit 1
          fi

          echo "✅ Content validation passed"

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Upload to GitHub Pages
        uses: actions/upload-pages-artifact@v3
        with:
          path: "./docs"

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      - name: Deployment summary
        run: |
          echo "🚀 AI Workspace Deployment Summary"
          echo "================================="
          echo "Repository: ${{ github.repository }}"
          echo "Branch: ${{ github.ref_name }}"
          echo "Commit: ${{ github.sha }}"
          echo "Pages URL: ${{ steps.deployment.outputs.page_url }}"
          echo ""
          echo "✅ AI Workspace successfully deployed to GitHub Pages!"
          echo "🌐 Access your site at: ${{ steps.deployment.outputs.page_url }}"
