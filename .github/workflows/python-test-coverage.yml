name: Python Test Coverage

on:
  pull_request:
    branches: ["main", "feature*"]
    paths:
      - "python/semantic_kernel/**"
      - "python/tests/unit/**"
env:
  # Configure a constant location for the uv cache
  UV_CACHE_DIR: /tmp/.uv-cache

jobs:
  python-tests-coverage:
    runs-on: ubuntu-latest
    continue-on-error: false
    defaults:
      run:
        working-directory: python
    env:
      UV_PYTHON: "3.10"
    steps:
      - uses: actions/checkout@v4
      - name: Setup filename variables
        run: echo "FILE_ID=${{ github.event.number }}" >> $GITHUB_ENV
      - name: Download coverage
<<<<<<< main
        continue-on-error: true
        uses: dawidd6/action-download-artifact@v5
        with:
          name: python-coverage-${{ env.FILE_ID }}.txt
          github_token: ${{ secrets.GH_ACTIONS_PR_WRITE }}
          workflow: python-unit-tests.yml
          search_artifacts: true
          if_no_artifact_found: warn
      - name: Download pytest
        continue-on-error: true
        uses: dawidd6/action-download-artifact@v5
        with:
          name: pytest-${{ env.FILE_ID }}.xml
          github_token: ${{ secrets.GH_ACTIONS_PR_WRITE }}
          workflow: python-unit-tests.yml
          search_artifacts: true
          if_no_artifact_found: warn
      - name: Download Files
        uses: actions/download-artifact@v4
        with:
          github-token: ${{ secrets.GH_ACTIONS_PR_WRITE }}
          run-id: ${{ github.event.workflow_run.id }}
          path: python/
          merge-multiple: true
      - name: Display structure of downloaded files
        run: ls python/
      - name: Pytest coverage comment
        id: coverageComment
        uses: MishaKav/pytest-coverage-comment@main
        continue-on-error: true
=======
      # Save the PR number to a file since the workflow_run event
      # in the coverage report workflow does not have access to it
      - name: Save PR number
        run: |
          echo ${{ github.event.number }} > ./pr_number
      - name: Set up uv
        uses: astral-sh/setup-uv@v4
        with:
          version: "0.5.x"
          enable-cache: true
          cache-suffix: ${{ runner.os }}-${{ env.UV_PYTHON }}
      - name: Install the project
        run: uv sync --all-extras --dev
      - name: Test with pytest
        run: uv run --frozen pytest -q --junitxml=pytest.xml --cov=semantic_kernel --cov-report=term-missing:skip-covered ./tests/unit | tee python-coverage.txt
      - name: Upload coverage report
        uses: actions/upload-artifact@v4
>>>>>>> upstream/main
        with:
          path: |
            python/python-coverage.txt
            python/pytest.xml
            python/pr_number
          overwrite: true
          retention-days: 1
          if-no-files-found: error
