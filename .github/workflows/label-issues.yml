name: Label and Assign Issues

on:
  issues:
    types:
      - reopened
      - opened

jobs:
  label_issues:
    name: "Issue: Add Labels and Assign"
    runs-on: ubuntu-latest
    permissions:
      issues: write
    steps:
      - name: Label issues based on content
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GH_ACTIONS_PR_WRITE }}
          script: |
            const body = context.payload.issue.body || "";
            const title = context.payload.issue.title || "";
            let labels = ["triage"];
            const criteria = [
              { keyword: /python/i, label: "python" },
              { keyword: /java/i, label: "java" },
              { keyword: /(\.net|dotnet|c#|csharp)/i, label: ".NET" }
            ];
            criteria.forEach(({ keyword, label }) => {
              if (body.match(keyword) || title.match(keyword)) {
                labels.push(label);
              }
            });
            console.log(`Adding labels: ${labels.join(", ")}`);
            try {
              await github.rest.issues.addLabels({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                labels: labels,
              });
            } catch (error) {
              core.setFailed(`Error adding labels: ${error.message}`);
            }

      - name: Auto-assign issues based on labels
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GH_ACTIONS_PR_WRITE }}
          script: |
            const labels = context.payload.issue.labels.map(l => l.name);
            const assignmentCriteria = {
              "python": "team-python",
              "java": "team-java",
              ".NET": "team-dotnet",
            };
            let assignee = null;
            for (const [label, assigneeName] of Object.entries(assignmentCriteria)) {
              if (labels.includes(label)) {
                assignee = assigneeName;
                break;
              }
            }
            if (assignee) {
              console.log(`Assigning issue to: ${assignee}`);
              try {
                await github.rest.issues.addAssignees({
                  issue_number: context.issue.number,
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  assignees: [assignee],
                });
              } catch (error) {
                core.setFailed(`Error assigning issue: ${error.message}`);
              }
            } else {
              console.log("No matching assignee found.");
            }
