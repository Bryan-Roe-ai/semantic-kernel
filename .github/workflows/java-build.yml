name: Build Java Semantic Kernel

# Triggers the workflow on manual dispatch, push, and pull request events
# for the specified branches and paths
on:
  workflow_dispatch:
  push:
<<<<<<< AI
=======
<<<<<<< main
<<<<<<< HEAD
    branches: [ "main", "java-development" ]
    paths:
      - 'java/**'
  pull_request:
=======
>>>>>>> origin/main-auto-tune
>>>>>>> main
    branches: [ "main", "java-development" ]
=======
    branches: [ "experimental-java" ]
    paths:
      - 'java/**'
  pull_request:
<<<<<<< main
    branches: [ "experimental-java" ]
>>>>>>> beeed7b7a795d8c989165740de6ddb21aeacbb6f
=======
    branches: [ "main", "java-development" ]
<<<<<<< AI
=======
>>>>>>> origin/main-auto-tune
>>>>>>> main
    paths:
      - 'java/**'

permissions:
  contents: read

jobs:
<<<<<<< Updated upstream
<<<<<<< Updated upstream
<<<<<<< Updated upstream
<<<<<<< Updated upstream
<<<<<<< Updated upstream
=======
<<<<<<< main
>>>>>>> Stashed changes
=======
<<<<<<< main
>>>>>>> Stashed changes
=======
<<<<<<< main
>>>>>>> Stashed changes
=======
<<<<<<< main
>>>>>>> Stashed changes
=======
<<<<<<< main
>>>>>>> Stashed changes
<<<<<<< AI
=======
<<<<<<< main
<<<<<<< HEAD
=======
  # Determines if Java files have changed
>>>>>>> origin/main-auto-tune
>>>>>>> main
<<<<<<< Updated upstream
<<<<<<< Updated upstream
<<<<<<< Updated upstream
<<<<<<< Updated upstream
<<<<<<< Updated upstream
=======
=======
>>>>>>> Stashed changes
=======
>>>>>>> Stashed changes
=======
>>>>>>> Stashed changes
=======
>>>>>>> Stashed changes
=======
  # Determines if Java files have changed
  # Determines if Java files have changed
>>>>>>> origin/main
<<<<<<< Updated upstream
<<<<<<< Updated upstream
<<<<<<< Updated upstream
<<<<<<< Updated upstream
>>>>>>> Stashed changes
=======
>>>>>>> Stashed changes
=======
>>>>>>> Stashed changes
=======
>>>>>>> Stashed changes
=======
>>>>>>> Stashed changes
  paths-filter:
    runs-on: ubuntu-latest
    outputs:
      javaChanges: ${{ steps.filter.outputs.java }}
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            java:
              - 'java/**'
              - '**/java/**'
<<<<<<< Updated upstream
<<<<<<< Updated upstream
<<<<<<< Updated upstream
<<<<<<< Updated upstream
<<<<<<< Updated upstream
=======
=======
>>>>>>> Stashed changes
=======
>>>>>>> Stashed changes
=======
>>>>>>> Stashed changes
=======
>>>>>>> Stashed changes
<<<<<<< main
=======
      - name: java tests
        if: steps.filter.outputs.java == 'true'
        run: echo "Java file"
      - name: not java tests
        if: steps.filter.outputs.java != 'true'
        run: echo "NOT java file"

  # Builds and tests the Java project
      # run only if 'java' files were changed
>>>>>>> origin/main
<<<<<<< Updated upstream
<<<<<<< Updated upstream
<<<<<<< Updated upstream
<<<<<<< Updated upstream
>>>>>>> Stashed changes
=======
>>>>>>> Stashed changes
=======
>>>>>>> Stashed changes
=======
>>>>>>> Stashed changes
=======
>>>>>>> Stashed changes
      - name: java tests
        if: steps.filter.outputs.java == 'true'
        run: echo "Java file"
      - name: not java tests
        if: steps.filter.outputs.java != 'true'
        run: echo "NOT java file"

  # Builds and tests the Java project
  java-build:
    runs-on: ubuntu-latest
    needs: paths-filter
    if: needs.paths-filter.outputs.javaChanges == 'true'
<<<<<<< AI
=======
<<<<<<< main
=======
  java-build:
    runs-on: ubuntu-latest
>>>>>>> beeed7b7a795d8c989165740de6ddb21aeacbb6f
=======
>>>>>>> origin/main-auto-tune
>>>>>>> main
    strategy:
      fail-fast: false
      matrix:
        # Defines a matrix strategy for JDK versions 8 and 17
        java-versions: [8, 17]

    name: Java CI on JDK${{ matrix.java-versions }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Need to use JDK 11 to build for JDK 8
      - name: Set JDK
        id: set-jdk
        shell: bash
        run: |
          if [[ ${{ matrix.java-versions }} == 8 ]]; then
            echo "JDK_VERSION=11" >> $GITHUB_OUTPUT
          else
            version=${{ matrix.java-versions }}
            echo "JDK_VERSION=$version" >> $GITHUB_OUTPUT
<<<<<<< Updated upstream
<<<<<<< Updated upstream
<<<<<<< Updated upstream
<<<<<<< Updated upstream
<<<<<<< Updated upstream
=======
<<<<<<< main
>>>>>>> Stashed changes
=======
<<<<<<< main
>>>>>>> Stashed changes
=======
<<<<<<< main
>>>>>>> Stashed changes
=======
<<<<<<< main
>>>>>>> Stashed changes
=======
<<<<<<< main
>>>>>>> Stashed changes
          fi

<<<<<<< AI
      - uses: actions/setup-java@v4
=======
<<<<<<< main
<<<<<<< HEAD
      - uses: actions/setup-java@v4
=======
      - uses: actions/setup-java@v3
>>>>>>> beeed7b7a795d8c989165740de6ddb21aeacbb6f
=======
      # Sets up the specified JDK version from the matrix
      - uses: actions/setup-java@v4
>>>>>>> origin/main-auto-tune
>>>>>>> main
<<<<<<< Updated upstream
<<<<<<< Updated upstream
<<<<<<< Updated upstream
<<<<<<< Updated upstream
<<<<<<< Updated upstream
=======
=======
>>>>>>> Stashed changes
=======
>>>>>>> Stashed changes
=======
>>>>>>> Stashed changes
=======
>>>>>>> Stashed changes
=======
      - uses: actions/setup-java@v4
      - uses: actions/setup-java@v4
      - uses: actions/setup-java@v3
      # Sets up the specified JDK version from the matrix
      - uses: actions/setup-java@v4
      - uses: actions/setup-java@v4
>>>>>>> origin/main
<<<<<<< Updated upstream
<<<<<<< Updated upstream
<<<<<<< Updated upstream
<<<<<<< Updated upstream
>>>>>>> Stashed changes
=======
>>>>>>> Stashed changes
=======
>>>>>>> Stashed changes
=======
>>>>>>> Stashed changes
=======
>>>>>>> Stashed changes
        with:
          java-version: ${{ steps.set-jdk.outputs.JDK_VERSION }}
          distribution: microsoft
          cache: maven

      # Builds the project with Maven using the matrix JDK version
      - name: Build with Maven
        run: ./mvnw -B -Pbug-check -DskipTests -Pcompile-jdk${{ matrix.java-versions }} clean install --file pom.xml
        working-directory: java

      # Runs tests with Maven using the matrix JDK version
      - name: Run tests
        run: ./mvnw -B -Pbug-check -Pcompile-jdk${{ matrix.java-versions }} test --file pom.xml
        working-directory: java

<<<<<<< Updated upstream
<<<<<<< Updated upstream
<<<<<<< Updated upstream
<<<<<<< Updated upstream
<<<<<<< Updated upstream
=======
<<<<<<< main
>>>>>>> Stashed changes
=======
<<<<<<< main
>>>>>>> Stashed changes
=======
<<<<<<< main
>>>>>>> Stashed changes
=======
<<<<<<< main
>>>>>>> Stashed changes
=======
<<<<<<< main
>>>>>>> Stashed changes
<<<<<<< AI
      - uses: actions/upload-artifact@v4
=======
<<<<<<< main
<<<<<<< HEAD
      - uses: actions/upload-artifact@v4
=======
=======
      # Uploads test artifacts for each JDK version
>>>>>>> origin/main-auto-tune
      - uses: actions/upload-artifact@v2
>>>>>>> beeed7b7a795d8c989165740de6ddb21aeacbb6f
>>>>>>> main
<<<<<<< Updated upstream
<<<<<<< Updated upstream
<<<<<<< Updated upstream
<<<<<<< Updated upstream
<<<<<<< Updated upstream
=======
=======
>>>>>>> Stashed changes
=======
>>>>>>> Stashed changes
=======
>>>>>>> Stashed changes
=======
>>>>>>> Stashed changes
=======
      - uses: actions/upload-artifact@v4
      - uses: actions/upload-artifact@v4
      # Uploads test artifacts for each JDK version
      - uses: actions/upload-artifact@v2
      - uses: actions/upload-artifact@v4
>>>>>>> origin/main
<<<<<<< Updated upstream
<<<<<<< Updated upstream
<<<<<<< Updated upstream
<<<<<<< Updated upstream
>>>>>>> Stashed changes
=======
>>>>>>> Stashed changes
=======
>>>>>>> Stashed changes
=======
>>>>>>> Stashed changes
=======
>>>>>>> Stashed changes
        if: always()
        with:
          name: test_output_sk_jdk${{ matrix.java-versions }}u
          path: java/**/target/surefire-reports/*Test.txt
